# TODO: move this to the "examples" directory
# static website component

type: rg-staticweb
inputTypes:
  name:
    type: string
    default: rgfamilysite
  contentPath:
    type: string
    default: ./site
  contentIndex:
    type: string
    default: index.html
  contentError:
    type: string
    default: error.html
  hostingRegion:
    type: string
    default: us-east-1
  hostingDomain:
    type: string
    default: rgfamily.com
  aliasDomain:
    type: string
    default: www.rgfamily.com

components:
  rootDomainBucket:
    type: s3
    inputs:
      name: ${input.hostingDomain}
  rootDomainBucketPolicy:
    type: rg-s3policy
    inputs:
      bucketName: ${rootDomainBucket.name}
  siteContentUploader:
    type: rg-s3sync
    inputs:
      contentPath: ${input.contentPath}
      bucketName: ${rootDomainBucket.name}
  wwwDomainBucket:
    type: s3
    inputs:
      name: ${input.aliasDomain}
  rootDomainBucketConfig:
    type: rg-s3-website-config
    inputs:
      rootBucketName: ${rootDomainBucket.name}
      indexDocument: ${input.contentIndex}
      errorDocument: ${input.contentError}
      redirectBucketName: ${wwwDomainBucket.name}
      redirectToHostName: ${input.hostingDomain}
  siteCloudFrontConfig:
    type: rg-cloudfront
    inputs:
      name: ${input.name}
      defaultRootObject: ${input.contentIndex}
      originId: ${rootDomainBucket.name}
      originDomain: ${rootDomainBucket.name}.s3.amazonaws.com
      aliasDomain: ${input.aliasDomain}
      distributionEnabled: true
  siteRoute53Config:
    type: rg-route53
    inputs:
      name: ${input.name}
      domainName: ${input.aliasDomain}
      dnsName: ${siteCloudFrontConfig.distribution.domainName} # d111111abcdef8.cloudfront.net
