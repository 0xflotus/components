
# access website at http://rgfamily.com

# [x] create S3 bucket (rgfamily.com, www.rgfamily.com)
# [x] configure S3 bucket permissions to be public
#   [x] Set S3 policy
#   [x] Set CORS
# [x] upload content to S3 bucket (rgfamily.com)
# [x] Configure root bucket for static website hosting
# [x] Configure www bucket for website redirect to root bucket
# [x] Build CloudFront Component
#   [x] Create/Enable a new Distribution
#   [] Enable/Disable an existing Distribution
#   [x] Delete an existing Distribution
# [] Build Route53 Component
# [x] output resulting website url
# [] output instructions to configure DNS, CNAME records and A records

type: rg-aws-staticweb
inputs:
  name: rgfamilysite
  # content:
  #   path: ./site
  #   index: index.html
  #   error: error.html
  # cdn:
  #   type: cloudfront
  # hosting:
  #   region: us-east-1
  #   domain: rgfamily.com
  content_path: ./site
  content_index: index.html
  content_error: error.html
  cdn_type: cloudfront
  hosting_region: us-east-1
  hosting_domain: rgfamily.com
  redirect_domain: www.rgfamily.com

components:
  rootDomainBucket:
    type: s3
    inputs:
      name: ${parent:hosting_domain}
  rootDomainBucketPolicy:
    type: rg-s3policy
    inputs:
      bucketName: ${rootDomainBucket:name}
  siteContentUploader:
    type: rg-s3dirloader
    inputs:
      contentPath: ${parent:content_path}
      bucketName: ${rootDomainBucket:name}
  wwwDomainBucket:
    type: s3
    inputs:
      name: ${parent:redirect_domain}
  rootDomainBucketConfig:
    type: rg-s3-website-config
    inputs:
      rootBucketName: ${rootDomainBucket:name}
      indexDocument: ${parent:content_index}
      errorDocument: ${parent:content_error}
      redirectBucketName: ${wwwDomainBucket:name}
      redirectToHostName: ${parent:hosting_domain}
  # siteCloudFrontConfig:
  #   type: rg-cloudfront
  #   inputs:
  #     distributionName: ${parent:name}
  #     defaultRootObject: ${parent:content_index}
  #     originId: ${rootDomainBucket:name}
  #     originDomain: rgfamily.com.s3.amazonaws.com
  #     aliasDomain: www.showcaseideas.com
  #     distributionEnabled: false
  #     loggingEnabled: false
  #     loggingBucket: ${parent:name}
  #     loggingIncludeCookies: false
  #     loggingPrefix: ${parent:name}
  #     priceClass: PriceClass_All # PriceClass_100 | PriceClass_200 | PriceClass_All
  siteRoute53Config:
    type: rg-route53
    inputs:
      name: ${parent:name}
      domainName: www.familymine.com
      privateZone: false
      vpcId: my-existing-vpc-id
      vpcRegion: ${parent:hosting_region}
